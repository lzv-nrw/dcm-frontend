import { createContext, useEffect, useState } from "react";
import { Spinner } from "flowbite-react";

import t from "../../utils/translation";
import MessageBox, {
  MessageHandler,
  useMessageHandler,
} from "../../components/MessageBox";
import { credentialsValue, host } from "../../App";

export const ErrorMessageContext = createContext<MessageHandler | undefined>(
  undefined
);

export default function HomeScreen() {
  const errorMessageHandler = useMessageHandler([]);

  const [welcome, setWelcome] = useState<string | null>(null);

  // fetch welcome message
  useEffect(() => {
    errorMessageHandler?.removeMessage("welcome-bad-response");
    errorMessageHandler?.removeMessage("welcome-error");
    fetch(host + "/api/misc/welcome", { credentials: credentialsValue })
      .then((response) => {
        if (!response.ok) {
          response.text().then((text) =>
            errorMessageHandler?.pushMessage({
              id: `welcome-bad-response`,
              text: `${t(
                "Fehler beim Laden der Willkommensnachricht"
              )}: ${text}`,
            })
          );
          return;
        }
        return response.text().then(setWelcome);
      })
      .catch((error) => {
        console.error(error);
        errorMessageHandler?.pushMessage({
          id: `welcome-error`,
          text: `${t("Fehler beim Laden der Willkommensnachricht")}: ${
            error.message
          }`,
        });
      });
    // eslint-disable-next-line
  }, []);

  return (
    <div className="mx-20 mt-4">
      <div className="flex justify-between items-center relative w-full mb-5">
        <h3 className="text-4xl font-bold">{t("Home")}</h3>
      </div>
      <ErrorMessageContext.Provider value={errorMessageHandler}>
        <MessageBox
          className="my-1"
          messages={errorMessageHandler.messages}
          messageTitle={t("Ein Fehler ist aufgetreten:")}
          onDismiss={errorMessageHandler.clearMessages}
        />
        <div className="flex justify-center">
          {welcome ? (
            // this html is trustworthy since it is generated by ourselves
            <div dangerouslySetInnerHTML={{ __html: welcome }} />
          ) : (
            <Spinner size="xl" />
          )}
        </div>
      </ErrorMessageContext.Provider>
    </div>
  );
}

/* template for drafting the default template
<div class="flex flex-col space-y-2 bg-gray-100 p-5 rounded-xl">
  <h3 class="text-2xl font-bold">Welcome!</h3>
  <p class="text-gray-500">
    This is the default welcome message template. It can be changed by setting the 'WELCOME_MESSAGE_TEMPLATE'-variable.
  </p>
</div>
*/
